###
	Copyright 2013 Robert Kunze

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	    http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
###
include_once "snowcompiler.php"
outputFile = null
interactive = true
compileOnly = false

if count(argv) > 1
	result = getopt "o:c:h"
	
	if count(result) <= 0
		for val, i in argv
			if i > 0
				if val[0] is '-'
					result[val[1]] = ""
				else
					code = file_get_contents val
					interactive = false

	if result['o']??
		outputFile = result['o']
	if result['c']??
		code = file_get_contents result['c']
		interactive = false
		compileOnly = true
	else if result['c']?
		compileOnly = true

	if result['h']?
		ver = SnowCompiler..version
		help = """
Snow Script Compiler Version {ver}

Syntax:
	{argv[0]} [-o <output file>] [-ch] [<input file>]

	-o <output file> - write the compiled result into the given file. If this parameter is missing, the compiled result will be written to stdout.
	-c               - the input should only be compiled - not executed
	-h               - shows this help
	<input file>     - the file that should be used as input. if this parameter is omitted, an interactive console will let you enter commands.
"""
		die help

if interactive
	fp = fopen "php://stdin", 'r'
	input = ""
	while not feof fp
		input = input % fread(fp, 4096)
	code = input

snow = new SnowCompiler(code)
result = do snow.compile

if compileOnly is true
	result = "<?php\n{result};\n?>"
	if outputFile??
		file_put_contents outputFile, result
	else
		echo result
else if compileOnly is false
	echo "\n==> Result: \n"
	lines = ";"->explode(result)
	for i in count(lines) - 1 downto 0
		trimmed = trim lines[i]
		if not empty trimmed
			lines[i] = "return " + lines[i]
			break
	result = eval ";"->implode lines
	echo result